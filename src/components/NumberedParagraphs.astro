---
/**
 * Renders a list of paragraphs with numbered headers. The numbers move downward individually as the
 * user scrolls through each paragraph. This is done with CSS `position: sticky;` which on its own
 * doesn't allow us to add styling based on whether an element is "stuck" or "unstuck." The design
 * has some specific styling for stuck / unstuck states, and I've started building that in
 * NumberedParagraphs.next.astro using JavaScript, which is currently a work in progress.
 */

interface NumberedParagraph {
    heading: string;
    body: string;
}

interface Props {
    paragraphs: NumberedParagraph[];
}

const { paragraphs } = Astro.props;
---

<div class="grid gap-8">
    {
        paragraphs.map((paragraph, index) => (
            <div class="flex relative left-[-28px]">
                <div class="pr-2 pt-[4.5px]">
                    <div class="sticky top-[50vh] rounded-full border-[1.5px] border-primary-light-500 dark:border-primary-dark-500 text-primary-light-500 dark:text-primary-dark-500 w-[22px] h-[22px] flex items-center justify-center text-15">
                        {index + 1}
                    </div>
                </div>
                <div>
                    <h2>{paragraph.heading}</h2>
                    <p class="body-3">{paragraph.body}</p>
                </div>
            </div>
        ))
    }
</div>
