---
/**
 * A top navigation header that includes the Woodshed icon on the left and a hamburger menu icon on
 * the right, which opens to reveal the site navigation. The menu is implemented with the native
 * <dialog> element.
 */

import DarkModeSwitch from './DarkModeSwitch.astro';
import NavHighlight from './NavHighlight.astro';
const iconScale = 'scale-[0.6875] md:scale-100';
---

<header id="nav-header" class="fixed w-full">
    <div id="header-grid">
        <!-- Woodshed icon (home button) -->
        <div class="pr-4 flex justify-end z-10" style={{ 'grid-area': 'left' }}>
            <a href="/" id="woodshed-icon">
                <img
                    class={`${iconScale} block dark:hidden`}
                    src="/icon-black.svg"
                    alt="Woodshed icon"
                />
                <img
                    class={`${iconScale} hidden dark:block`}
                    src="/icon-light-blue.svg"
                    alt="Woodshed icon"
                />
            </a>
        </div>
        <div class="pl-4" style={{ 'grid-area': 'right' }}>
            <!-- Modal toggle (animated hamburger icon) -->
            <button
                class="flex-none z-50 mt-2"
                id="toggle-nav"
                aria-label="Toggle navigation menu"
                type="button"
            >
                <div id="hamburger" class={iconScale}>
                    <div id="icon"></div>
                </div>
            </button>
            <!-- Modal backdrop - shown only when modal is open -->
            <div
                id="nav-backdrop"
                class="fixed inset-0 bg-white opacity-70 dark:bg-black dark:opacity-50 hidden"
            >
            </div>
            <!-- Modal content - this is placed here so it is positioned relative to the button and
                so that the button sits above the dialog in the stacking order
            -->
            <dialog
                id="nav-dialog"
                class="bg-primary-light-shade-500 dark:bg-gray-dark-shade-400 pt-16 px-12 pb-12 w-[375px] h-[548px] top-[-43px] left-[-331px] md:top-[-53px] md:left-[-321px] relative"
            >
                <nav>
                    <ul
                        class="text-22 flex flex-col gap-5 text-gray-light-shade-800 dark:text-primary-dark-200"
                    >
                        <li class="hide-nav">
                            <a href="/">Process</a>
                        </li>
                        <li class="hide-nav">
                            <a href="/projects">Projects</a>
                        </li>
                        <li class="hide-nav">
                            <a href="/about-us">About us</a>
                        </li>
                    </ul>
                    <div class="mr-24 pt-12 border-b border-gray-light-100">
                    </div>
                </nav>
                <div class="pt-10 flex flex-col">
                    <DarkModeSwitch />
                </div>
                <p
                    class="pt-14 font-cta text-28 leading-9 pb-4 text-gray-light-300 dark:text-primary-dark-200 font-medium"
                >
                    Come say hello!
                </p>
                <NavHighlight>
                    <a
                        class="hide-nav text-gray-light-shade-600 dark:text-primary-dark-200 text-22"
                        href="mailto:hello@woodshed.tech"
                        rel="noreferrer">hello@woodshed.tech</a
                    >
                </NavHighlight>
            </dialog>
        </div>
    </div>
</header>

<script>
    const $toggleElement =
        document.querySelector<HTMLButtonElement>('#toggle-nav');
    const $header = document.getElementById('nav-header');
    const $dialog = document.querySelector<HTMLDialogElement>('#nav-dialog');
    const $hideElements = document.querySelectorAll('.hide-nav');
    const $backdrop = document.getElementById('nav-backdrop');

    if ($toggleElement) {
        $toggleElement.onclick = () => {
            if ($dialog && $header && $backdrop) {
                if ($dialog.open) {
                    $dialog.close();
                    $header.classList.remove('open');
                    $backdrop.classList.add('hidden');
                } else {
                    // We use `show()` here rather than `showModal()` because it allows us to
                    // position the dialog as desired. If we use `showModal()`, we end up fighting
                    // the user agent styles and resorting to hacky event-based positioning.
                    $dialog.show();
                    $header.classList.add('open');
                    $backdrop.classList.remove('hidden');
                }
            }
        };
    }

    Array.from($hideElements).forEach($hideElement => {
        $hideElement.addEventListener('click', () => {
            if ($dialog) {
                $dialog.close();
            }
        });
    });
</script>

<style>
    /* Sets up the responsive grid layout */
    #header-grid {
        display: grid;
        grid-template-areas: 'left-margin left center right right-margin';
        grid-template-columns: 0px 60px auto 60px 0px;
        grid-template-rows: 60px;
    }

    @media (min-width: 544px) {
        #header-grid {
            grid-template-columns: 0px 70px auto 70px 0px;
            grid-template-rows: 126px;
        }
    }

    @media (min-width: 768px) {
        #header-grid {
            grid-template-columns: 0px 90px auto 90px 0px;
        }
    }

    @media (min-width: 1024px) {
        #header-grid {
            grid-template-columns: auto 90px 840px 90px auto;
        }
    }

    /* Animates the dialog when it opens */

    @keyframes show-dialog {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    dialog#nav-dialog[open] {
        animation: show-dialog 750ms ease normal;
    }

    /* Sets up the animated hamburger menu button */
    header {
        --bar-length: 18px;
        --bar-thickness: 2px;
        --bar-offset: 5px;
        --transition-duration: 0.5s;
    }

    #toggle-nav {
        position: relative;
        top: -5px;
        left: 8px;
        width: var(--bar-length);
        height: var(--bar-length);
    }

    #hamburger {
        position: absolute;
        transition-duration: var(--transition-duration);
    }

    #hamburger #icon {
        transition-duration: var(--transition-duration);
        position: absolute;
        height: 0px;
        width: var(--bar-length);
        top: calc(0.5 * var(--bar-length));
    }

    #hamburger:before {
        transition-duration: var(--transition-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: var(--bar-thickness);
        content: '';
        top: calc(-1 * var(--bar-offset));
    }

    html:not(.dark) #hamburger:before {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:before {
        @apply bg-primary-dark-100;
    }

    #hamburger:after {
        transition-duration: var(--transition-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: var(--bar-thickness);
        content: '';
        top: var(--bar-offset);
    }

    html:not(.dark) #hamburger:after {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:after {
        @apply bg-primary-dark-100;
    }

    #nav-header.open #hamburger #icon {
        transition: 0.5s;
    }

    #nav-header.open #hamburger:before {
        transform: rotateZ(45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(0.6 * var(--bar-offset))
            );
    }

    #nav-header.open #hamburger:after {
        transform: rotateZ(-45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(-1 * 0.6 * var(--bar-offset))
            );
    }

    #hamburger:hover {
        cursor: pointer;
    }
</style>
