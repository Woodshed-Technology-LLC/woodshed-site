---
/**
 * A top navigation header that includes the Woodshed icon on the left and a hamburger menu icon on
 * the right, which opens to reveal the site navigation. The menu is implemented with the [Modal
 * from Flowbite](https://flowbite.com/docs/components/modal/), which handles the state management
 * aspect of the modal and some of the Aria attributes. We use
 * [focus-trap](https://github.com/focus-trap/focus-trap) to trap focus within the modal when it is
 * open.
 */

import DarkModeSwitch from './DarkModeSwitch.astro';
import NavHighlight from './NavHighlight.astro';
const iconScale = 'scale-[0.6875] md:scale-100';
---

<header id="navigation" class="flex justify-center w-screen">
    <!-- When the modal is open, it inserts a <div> just before the closing </body> tag in order to
        render the backdrop (i.e. overlay). This added div has a fixed position with z-40, so we
        need to add z-50 here in order to achieve a higher stacking context.
     -->
    <div class="flex justify-between max-w-[956px] w-full fixed z-50 px-3">
        <!-- Woodshed icon (home button) -->
        <div class={iconScale}>
            <a href="/" id="woodshed-icon">
                <img
                    class="block dark:hidden"
                    src="/icon-black.svg"
                    alt="Woodshed icon"
                />
                <img
                    class="hidden dark:block"
                    src="/icon-light-blue.svg"
                    alt="Woodshed icon"
                />
            </a>
        </div>
        <!-- Main modal -->
        <div
            id="nav-modal"
            tabindex="-1"
            aria-hidden="true"
            class="absolute z-50 top-[-24px] right-[-10px] hidden w-full overflow-x-hidden overflow-y-auto"
        >
            <!-- Modal content -->
            <div
                class="relative bg-primary-light-shade-500 dark:bg-gray-dark-shade-400 pt-16 px-12 pb-12 w-[375px] h-[548px]"
                id="nav-menu"
                aria-label="Navigation menu"
            >
                <nav>
                    <ul
                        class="text-22 flex flex-col gap-5 text-gray-light-shade-800 dark:text-primary-dark-200"
                    >
                        <li class="hide-nav">
                            <a href="/">Process</a>
                        </li>
                        <li class="hide-nav">
                            <a href="/projects/">Projects</a>
                        </li>
                    </ul>
                    <div class="mr-24 pt-12 border-b border-gray-light-100">
                    </div>
                </nav>
                <div class="pt-10 flex flex-col">
                    <DarkModeSwitch />
                </div>
                <p
                    class="pt-16 font-cta text-28 leading-9 pb-4 text-gray-light-300 dark:text-primary-dark-200 font-medium"
                >
                    Come say hello!
                </p>
                <NavHighlight>
                    <a
                        class="hide-nav text-gray-light-shade-600 dark:text-primary-dark-200 text-22"
                        href="mailto:hello@woodshed.tech"
                        rel="noreferrer">hello@woodshed.tech</a
                    >
                </NavHighlight>
            </div>
        </div>
        <!-- Modal toggle (animated hamburger icon) -->
        <button
            class="flex-none z-50 mt-2"
            id="toggle-nav"
            aria-label="Toggle navigation menu"
            type="button"
        >
            <div id="hamburger" class={iconScale}>
                <div id="icon"></div>
            </div>
        </button>
    </div>
</header>

<script>
    import { Modal } from 'flowbite';
    import * as focusTrap from 'focus-trap';

    const $hideElements = document.querySelectorAll('.hide-nav');
    const $modalElement = document.querySelector<HTMLDivElement>('#nav-modal');
    const $toggleElement = document.getElementById('toggle-nav');
    const $navigation = document.getElementById('navigation');
    const $woodshedIcon = document.getElementById('woodshed-icon');

    const trap = focusTrap.createFocusTrap('#navigation');

    // create a new modal component
    const modal = new Modal($modalElement, {
        placement: 'top-right',
        backdrop: 'dynamic',
        backdropClasses:
            'bg-gray-light-shade-900 opacity-50 fixed inset-0 z-40',

        closable: true,
        onHide: () => {
            if ($navigation) {
                $navigation.classList.remove('open');
            }

            if ($woodshedIcon) {
                $woodshedIcon.removeAttribute('inert');
            }

            trap.deactivate();
        },
        onShow: () => {
            if ($navigation) {
                $navigation.classList.add('open');
            }

            if ($woodshedIcon) {
                $woodshedIcon.setAttribute('inert', '');
            }

            trap.activate();
        },
    });

    Array.from($hideElements).forEach($hideElement => {
        $hideElement.addEventListener('click', () => {
            modal.hide();
        });
    });

    if ($toggleElement) {
        $toggleElement.addEventListener('click', () => {
            modal.toggle();
        });
    }
</script>

<style>
    /* Add an animation that fades the menu into the screen when it opens */

    @keyframes show {
        100% {
            opacity: 1;
        }
    }
    #nav-modal {
        animation: show 500ms 100ms cubic-bezier(0.38, 0.97, 0.56, 0.76)
            forwards;
        opacity: 0;
    }

    /* Set up the animated hamburger menu button */
    #navigation {
        --bar-length: 24px;
        --bar-thickness: 3px;
        --bar-offset: 6px;
        --transition-duration: 0.5s;
    }

    #toggle-nav {
        position: relative;
        top: calc(-1 * var(--bar-thickness));
        width: var(--bar-length);
        height: var(--bar-length);
    }

    #hamburger {
        position: absolute;
        transition-duration: var(--transition-duration);
    }

    #hamburger #icon {
        transition-duration: var(--transition-duration);
        position: absolute;
        height: 0px;
        width: var(--bar-length);
        top: calc(0.5 * var(--bar-length));
    }

    #hamburger:before {
        transition-duration: var(--transition-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: calc(0.5 * var(--bar-thickness));
        content: '';
        top: calc(-1 * var(--bar-offset));
    }

    html:not(.dark) #hamburger:before {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:before {
        @apply bg-primary-dark-100;
    }

    #hamburger:after {
        transition-duration: var(--transition-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: calc(0.5 * var(--bar-thickness));
        content: '';
        top: var(--bar-offset);
    }

    html:not(.dark) #hamburger:after {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:after {
        @apply bg-primary-dark-100;
    }

    #navigation.open #hamburger #icon {
        transition: 0.5s;
    }

    #navigation.open #hamburger:before {
        transform: rotateZ(45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(0.6 * var(--bar-offset))
            );
    }

    #navigation.open #hamburger:after {
        transform: rotateZ(-45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(-1 * 0.6 * var(--bar-offset))
            );
    }

    #hamburger:hover {
        cursor: pointer;
    }
</style>
