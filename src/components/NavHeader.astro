---
/**
 * A top navigation header that includes the Woodshed icon on the left and a hamburger menu icon on
 * the right, which opens to reveal the site navigation. The menu is implemented with the native
 * <dialog> element.
 */

import DarkModeSwitch from './DarkModeSwitch.astro';
import NavHighlight from './NavHighlight.astro';
const iconScale = 'scale-[0.6875] md:scale-100';
---

<header id="nav-header" class="fixed w-full">
    <div id="header-grid">
        <!-- Woodshed icon (home button) -->
        <div class="pr-3 flex justify-end z-10" style={{ 'grid-area': 'left' }}>
            <a href="/" id="woodshed-icon" class="h-[44px] w-[44px] grid">
                <img
                    class={`${iconScale} block dark:hidden place-self-center`}
                    src="/icon-black.svg"
                    alt="Woodshed icon"
                />
                <img
                    class={`${iconScale} hidden dark:block place-self-center`}
                    src="/icon-light-blue.svg"
                    alt="Woodshed icon"
                />
            </a>
        </div>
        <div class="pl-3" style={{ 'grid-area': 'right' }}>
            <!-- Modal toggle (animated hamburger icon) -->
            <button
                class="flex-none z-50 h-[44px] w-[44px] grid"
                id="toggle-nav"
                aria-label="Toggle navigation menu"
                type="button"
            >
                <div id="hamburger" class={`${iconScale} place-self-center`}>
                    <div id="icon"></div>
                </div>
            </button>
            <!-- Modal backdrop - shown only when modal is open -->
            <div id="nav-backdrop" class="fixed inset-0 hidden"></div>
            <!-- Modal content - this is placed here so it is positioned relative to the button and
                so that the button sits above the dialog in the stacking order
            -->
            <dialog
                id="nav-dialog"
                class="bg-primary-light-shade-500 dark:bg-gray-dark-shade-400 pt-16 px-12 pb-12 relative"
            >
                <nav>
                    <ul
                        class="slide-down text-22 flex flex-col gap-5 text-gray-light-shade-800 dark:text-primary-dark-200"
                    >
                        <li>
                            <button type="button" class="hide-nav" data-href="/"
                                >Process</button
                            >
                        </li>
                        <li>
                            <button
                                class="hide-nav"
                                type="button"
                                data-href="/projects">Projects</button
                            >
                        </li>
                        <li>
                            <button
                                type="button"
                                class="hide-nav"
                                data-href="/about-us">About us</button
                            >
                        </li>
                    </ul>
                    <div class="mr-24 pt-12 border-b border-gray-light-100">
                    </div>
                </nav>
                <div class="pt-10 flex flex-col">
                    <DarkModeSwitch />
                </div>
                <div class="slide-up">
                    <p
                        class="pt-14 font-cta text-28 leading-9 pb-4 text-gray-light-300 dark:text-primary-dark-200 font-medium"
                    >
                        Come say hello!
                    </p>
                    <NavHighlight>
                        <a
                            class="hide-nav text-gray-light-shade-600 dark:text-primary-dark-200 text-22"
                            href="mailto:hello@woodshed.tech"
                            rel="noreferrer">hello@woodshed.tech</a
                        >
                    </NavHighlight>
                </div>
            </dialog>
        </div>
    </div>
</header>

<script>
    const toggleNav = document.querySelector<HTMLButtonElement>('#toggle-nav');
    const navHeader = document.getElementById('nav-header');
    const navDialog = document.querySelector<HTMLDialogElement>('#nav-dialog');
    const hideNavTriggers = document.querySelectorAll('.hide-nav');
    const navBackdrop = document.getElementById('nav-backdrop');

    const openDialog = () => {
        if (navDialog && navHeader && navBackdrop && toggleNav) {
            // We use `show()` here rather than `showModal()` because it allows us to
            // position the dialog as desired. If we use `showModal()`, we end up fighting
            // the user agent styles and resorting to hacky event-based positioning.
            navDialog.show();
            toggleNav.classList.add('open');
            navHeader.classList.add('open');
            navBackdrop.classList.remove('hidden');
        }
    };

    const closeDialog = (callback?: () => void) => {
        if (navDialog && navHeader && navBackdrop) {
            toggleNav.classList.remove('open');
            navHeader.classList.add('closing');

            const afterAnimation = () => {
                navDialog.close();
                navHeader.classList.remove('open');
                navBackdrop.classList.add('hidden');
                navHeader.classList.remove('closing');
                navDialog.removeEventListener(
                    'animationend',
                    afterAnimation,
                    false,
                );

                if (callback) {
                    callback();
                }
            };

            navDialog.addEventListener('animationend', afterAnimation);
        }
    };

    if (toggleNav) {
        toggleNav.onclick = () => {
            if (navDialog && navHeader && navBackdrop) {
                if (navDialog.open) {
                    closeDialog();
                } else {
                    openDialog();
                }
            }
        };
    }

    Array.from(hideNavTriggers).forEach(hideNavTrigger => {
        hideNavTrigger.addEventListener('click', () => {
            const targetHref = hideNavTrigger.getAttribute('data-href');

            closeDialog(() => {
                // Wait a bit after animation ends before navigating to the next page
                setTimeout(() => {
                    if (window.location.pathname !== targetHref) {
                        window.location.assign(
                            `${window.location.origin}${targetHref}`,
                        );
                    }
                }, 100);
            });
        });
    });
</script>

<style>
    header {
        --animation-duration: 400ms;
        --backdrop-opacity: 0.7;
        --bar-length: 18px;
        --bar-thickness: 2px;
        --bar-offset: 5px;
    }

    /* On smaller devices, ensure that the dialog covers the entire width of the screen */
    #nav-dialog {
        height: 548px;
        width: 100vw;
        min-width: 325px;
        left: calc(-1 * (calc(max(100vw - 48px, 325px - 48px))));
        top: -54px;
    }

    /* Decrease the width as necessary to make room for the woodshed icon. This ensures that the
    icon does not partially overlap the dialog. */
    @media (min-width: 426px) {
        #nav-dialog {
            width: 375px;
            left: -327px;
        }
    }

    /* For 'sm' screens and above, adjust the positioning to accomodate a larger hamburger button */
    @media (min-width: 544px) {
        #nav-dialog {
            top: -64px;
            left: -317px;
        }
    }

    /* Sets up the responsive grid layout */

    #header-grid {
        display: grid;
        grid-template-areas: 'left-margin left center right right-margin';
        grid-template-columns: 0px 60px auto 60px 0px;
        grid-template-rows: 60px;
    }

    @media (min-width: 544px) {
        #header-grid {
            grid-template-columns: 0px 70px auto 70px 0px;
            grid-template-rows: 126px;
        }
    }

    @media (min-width: 768px) {
        #header-grid {
            grid-template-columns: 0px 90px auto 90px 0px;
        }
    }

    @media (min-width: 1024px) {
        #header-grid {
            grid-template-columns: auto 90px 840px 90px auto;
        }
    }

    /* Animates the dialog so it fades in and out */

    @keyframes fadeInDialog {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    @keyframes fadeOutDialog {
        0% {
            opacity: 1;
        }
        100% {
            opacity: 0;
        }
    }

    dialog[open]#nav-dialog {
        animation: fadeInDialog var(--animation-duration) ease-in normal;
    }

    #nav-header.closing dialog[open]#nav-dialog {
        animation: fadeOutDialog var(--animation-duration) ease-in normal;
    }

    /* Animates the backdrop so it fades in and out */

    html:not(.dark) #nav-backdrop {
        @apply bg-gray-light-100;
    }

    html.dark #nav-backdrop {
        @apply bg-gray-dark-shade-900;
    }

    #nav-header.open #nav-backdrop {
        opacity: var(--backdrop-opacity);
    }

    @keyframes fadeInBackdrop {
        0% {
            opacity: 0;
        }

        100% {
            opacity: var(--backdrop-opacity);
        }
    }

    @keyframes fadeOutBackdrop {
        0% {
            opacity: var(--backdrop-opacity);
        }
        100% {
            opacity: 0;
        }
    }

    #nav-header.open:not(.closing) #nav-backdrop {
        animation: fadeInBackdrop var(--animation-duration) ease-in normal;
    }

    #nav-header.open.closing #nav-backdrop {
        animation: fadeOutBackdrop var(--animation-duration) ease-in normal;
    }

    /* Animates the list of buttons so they slide down */

    .slide-down {
        transition: transform var(--animation-duration);
        will-change: transform;
        transform: translateY(-50px);
    }

    #nav-header.open .slide-down {
        transform: translateY(0px);
    }

    /* Animates the contact link so it slides up */

    .slide-up {
        transition: transform var(--animation-duration);
        will-change: transform;
        transform: translateY(50px);
    }

    #nav-header.open .slide-up {
        transform: translateY(0px);
    }

    /* Sets up the animated hamburger menu button */

    #toggle-nav {
        position: relative;
    }

    #hamburger {
        position: absolute;
        top: 20px;
        left: 12px;
        transition-duration: var(--animation-duration);
    }

    #hamburger #icon {
        transition-duration: var(--animation-duration);
        position: absolute;
        height: 0px;
        width: var(--bar-length);
        top: calc(0.5 * var(--bar-length));
    }

    #hamburger:before {
        transition-duration: var(--animation-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: var(--bar-thickness);
        content: '';
        top: calc(-1 * var(--bar-offset));
    }

    html:not(.dark) #hamburger:before {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:before {
        @apply bg-primary-dark-100;
    }

    #hamburger:after {
        transition-duration: var(--animation-duration);
        position: absolute;
        width: var(--bar-length);
        height: var(--bar-thickness);
        border-radius: var(--bar-thickness);
        content: '';
        top: var(--bar-offset);
    }

    html:not(.dark) #hamburger:after {
        @apply bg-gray-light-shade-900;
    }

    html.dark #hamburger:after {
        @apply bg-primary-dark-100;
    }

    #toggle-nav.open #hamburger #icon {
        transition: var(--animation-duration);
    }

    #toggle-nav.open #hamburger:before {
        transform: rotateZ(45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(0.6 * var(--bar-offset))
            );
    }

    #toggle-nav.open #hamburger:after {
        transform: rotateZ(-45deg) scaleX(1.33)
            translate(
                calc(0.6 * var(--bar-offset)),
                calc(-1 * 0.6 * var(--bar-offset))
            );
    }

    #hamburger:hover {
        cursor: pointer;
    }
</style>
